(import lit_1 () (ext Int))
(import lit_-1 () (ext Int))
(import lit_-2 () (ext Int))
(import ifz (ext Int) () ())
(import ife (ext Int ext Int) () ())
(import add (ext Int ext Int) (ext Int))
(import return (ext Int))

(signature Cont (ext Int))

(define main (n) (ext Int)
  (new k Cont () ((r) (extern return (r))))
  (do (i k) substitute (n k))
  (jump fibonacci)
)

(define fibonacci (i a0) (ext Int con Cont)
  (extern ifz(i)
    (()
      (do (a0 i) substitute (a0 i))
      (invoke a0 0))
    (()
      (do (i a0) substitute (i a0))
      (do (x0) extern lit_1 ())
      (extern ife(i x0)
        (()
          (do (a0 i) substitute (a0 i))
          (invoke a0 0))
        (()
          (do (i a0) substitute (i a0))
          (do (x1) extern lit_-1 ())
          (do (x1 i a0) substitute (x1 i a0))
          (do (a) extern add (i x1))
          (do (i a0 a) substitute (i a0 a))
          (new a2 Cont (i a0) ((x)
            (do (i a0 x) substitute (i a0 x))
            (do (x2) extern lit_-2 ())
            (do (x2 i a0 x) substitute (x2 i a0 x))
            (do (b) extern add (i x2))
            (do (x a0 b) substitute (x a0 b))
            (new a1 Cont (x a0) ((x3)
              (do (x a0 x3) substitute (x a0 x3))
              (do (z) extern add (x x3))
              (do (a0 z) substitute (a0 z))
              (invoke a0 0)))
            (do (b a1) substitute (b a1))
            (jump fibonacci)))
          (do (a a2) substitute (a a2))
          (jump fibonacci)))))
)
