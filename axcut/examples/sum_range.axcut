(import lit_0 () (ext Int))
(import lit_1 () (ext Int))
(import ifl (ext Int ext Int) () ())
(import add (ext Int ext Int) (ext Int))
(import return (ext Int))

(signature List () (ext Int pro List))
(signature Cont (ext Int))


(define main (n) (ext Int)
  (do (i) extern lit_0 ())
  (new k0 Cont () ((r) (extern return (r))))
  (new k List (k0)
    (()
      (do (k0) substitute (k0))
      (let l List 0 ())
      (do (l k0) substitute (l k0))
      (jump sum))
    ((x xs)
      (do (x xs k0) substitute (x xs k0))
      (let l List 1 (x xs))
      (do (l k0) substitute (l k0))
      (jump sum)))
  (do (i n k) substitute (i n k))
  (jump range)
)

(define range (i n a0) (ext Int ext Int con List)
  (extern ifl (i n)
    (()
      (do (a0 i n a) substitute (a0 i n i))
      (new a1 List (a0 i)
        (()
          (do (a0 i) substitute (a0 i))
          (let x0 List 0 ())
          (do (a0 i x0) substitute (a0 i x0))
          (invoke a0 1))
        ((x xs)
          (do (x xs a0 i) substitute (x xs a0 i))
          (let x0 List 1 (x xs))
          (do (a0 i x0) substitute (a0 i x0))
          (invoke a0 1)))
      (do (a1 n a) substitute (a1 n a))
      (do (x1) extern lit_1 ())
      (do (x1 a1 n a) substitute (x1 a1 n a))
      (do (c) extern add (a x1))
      (do (c n a1) substitute (c n a1))
      (jump range))
    (()
      (do (a0) substitute (a0))
      (invoke a0 0)))
)

(define sum (xs a0) (pro List con Cont)
  (do (xs a0) substitute (xs a0))
  (switch xs
    (()
      (do (a0) substitute (a0))
      (do (o) extern lit_0 ())
      (do (a0 o) substitute (a0 o))
      (invoke a0 0))
    ((y ys)
      (do (y a0 ys) substitute (y a0 ys))
      (new a1 Cont (y a0) ((x0)
        (do (y a0 x0) substitute (y a0 x0))
        (do (a) extern add (y x0))
        (do (a0 a) substitute (a0 a))
        (invoke a0 0)))
      (do (ys a1) substitute (ys a1))
      (jump sum)))
)
